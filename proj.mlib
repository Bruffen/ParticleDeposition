<?xml version="1.0" ?>
<materialLib name="particleLib">
    <renderTargets>
	    <renderTarget name ="Render">
			<SIZE width=1280 height=720 />
			<CLEAR_VALUES r="0.8" g="1.0" b="0.7" />
			<colors>
				<color name="texRender" internalFormat="RGBA32F" />
			</colors>
			<depth name="texRenderZ" internalFormat="DEPTH_COMPONENT32F" />
		</renderTarget>
		<renderTarget name ="HeightMap">
			<SIZE width="TEXTURE_RESOLUTION" height="TEXTURE_RESOLUTION" />
			<colors>
				<color name="heightMap" internalFormat="R32F" />
			</colors>
		</renderTarget>
		<!--renderTarget name ="VolumeHeight">
			<SIZE width=1024 height=1024 />
			<colors>
				<color name="texVolume" internalFormat="R32F" />
			</colors>
		</renderTarget-->
    </renderTargets>
	<textures>
		<texture name="texVolume">
			<WIDTH value="TEXTURE_RESOLUTION" />
			<HEIGHT value="TEXTURE_RESOLUTION" />
			<INTERNAL_FORMAT value="RGBA32F" />
		</texture>
		<texture name="texVolumeAux">
			<WIDTH value="TEXTURE_RESOLUTION" />
			<HEIGHT value="TEXTURE_RESOLUTION" />
			<INTERNAL_FORMAT value="RGBA32F" />
		</texture>
		<texture name="test" filename="transferir.jpg">
		</texture>
	</textures>	

	<shaders>
            <shader name = "particles"
				cs = "shaders/particles.comp" />
			<shader name = "screenSpaceVolume"
				vs = "shaders/quad.vert"
				ps = "shaders/volume.frag" />
            <shader name = "tex"
                vs = "shaders/tex.vert"
                ps = "shaders/tex.frag" />
			<shader name = "billboards"
                vs = "shaders/billboards.vert"
				gs = "shaders/billboards.geom"
                ps = "shaders/billboards.frag" />
			<shader name="deposition"
				cs = "shaders/deposition.comp" 
				/>
			<shader name="addVect"
				cs = "shaders/addVect.comp" 
				/>
			
	</shaders>
<!-- 
	gs = "shaders/billboards.geom" -->

	<buffers>
		<buffer name="Positions">
			<DIM x="NUMBER_OF_PARTICLES" y=1 z=1 />
			<structure>
				<field value="VEC4" />
			</structure>
			<CLEAR value="NEVER" />
		</buffer>
		<buffer name="Directions">
			<DIM x="NUMBER_OF_PARTICLES" y=1 z=1 />
			<structure>
				<field value="VEC4" />
			</structure>
			<CLEAR value="NEVER" />
		</buffer>
	</buffers>
	
	<materials>
		<material name="matRenderVolume">
			<shader name="screenSpaceVolume">
				<values>
                    <valueof uniform="texRender"	type="TEXTURE_BINDING" 	context="CURRENT" 		component="UNIT" id=0 />
                    <valueof uniform="texRenderZ"	type="TEXTURE_BINDING" 	context="CURRENT" 		component="UNIT" id=1 />
                    <valueof uniform="texVolume"	type="TEXTURE_BINDING" 	context="CURRENT" 		component="UNIT" id=2 />
                    <valueof uniform="heightMap"	type="TEXTURE_BINDING" 	context="CURRENT" 		component="UNIT" id=3 />
					<valueof uniform="lightDir"		type="LIGHT" 			context="Sun" 			component="DIRECTION" />
					<valueof uniform="view"			type="CAMERA"			context="MainCamera"	component="VIEW" />
					<valueof uniform="right"		type="CAMERA"			context="MainCamera"	component="NORMALIZED_RIGHT" />
					<valueof uniform="up"			type="CAMERA"			context="MainCamera"	component="NORMALIZED_UP" />
					<valueof uniform="position"		type="CAMERA"			context="MainCamera"	component="POSITION" />
					<valueof uniform="zNear"		type="CAMERA"			context="MainCamera"	component="NEAR" />
					<valueof uniform="zFar"			type="CAMERA"			context="MainCamera"	component="FAR" />
					<valueof uniform="fov"			type="CAMERA"			context="MainCamera"	component="FOV" />
					<valueof uniform="sceneHt"		type="CAMERA"			context="HeightCamera"	component="FAR" />
					<valueof uniform="sceneUp"		type="CAMERA"			context="HeightCamera"	component="TOP" />
					<valueof uniform="sceneLf"		type="CAMERA"			context="HeightCamera"	component="LEFT" />
					<valueof uniform="sceneRt"		type="CAMERA"			context="HeightCamera"	component="RIGHT" />
					<valueof uniform="sceneDw"		type="CAMERA"			context="HeightCamera"	component="BOTTOM" />
					<valueof uniform="windowSize"	type="VIEWPORT"			context="MainViewport"	component="SIZE" />
					<valueof uniform="particleAlpha" type="RENDERER" 		context="CURRENT" 		component="particleAlpha" />
					<valueof uniform="particleColor" type="RENDERER" 		context="CURRENT" 		component="particleColor" />
					<valueof uniform="marchingStep"	type="RENDERER" 		context="CURRENT" 		component="marchingStep" />
					<valueof uniform="marchingMax"	type="RENDERER" 		context="CURRENT" 		component="marchingMax" />
					<valueof uniform="offsetX"	type="RENDERER" 		context="CURRENT" 		component="offsetX" />
					<valueof uniform="offsetY"	type="RENDERER" 		context="CURRENT" 		component="offsetY" />
				</values>
			</shader>
			<textures>
                <texture name="texRender" 			UNIT=0 >
					<MAG_FILTER value="LINEAR" />
					<MIN_FILTER value="LINEAR" />
				 </texture>
                <texture name="texRenderZ"			UNIT=1 />
                <texture name="texVolume" 			UNIT=2 >
					<MAG_FILTER value="LINEAR" />
					<MIN_FILTER value="LINEAR" />
				 </texture>
                <!-->
				<texture name="test" 				UNIT=2 />
				<-->
                <texture name="HeightMap_depth" 	UNIT=3 >
					<MAG_FILTER value="LINEAR" />
					<MIN_FILTER value="LINEAR" />
				 </texture>
            </textures>
		</material>

		<material name="matParticles">
			<shader name="particles">
				<values>
                    <valueof uniform="texVolume" 	type="IMAGE_TEXTURE" 	context="CURRENT" 		component="UNIT" id=0 />
                    <valueof uniform="heightMap" 	type="TEXTURE_BINDING" 	context="CURRENT" 		component="UNIT" id=1 />
					<valueof uniform="sceneHt"		type="CAMERA"			context="HeightCamera"	component="FAR" />
					<valueof uniform="sceneUp"		type="CAMERA"			context="HeightCamera"	component="TOP" />
					<valueof uniform="sceneLf"		type="CAMERA"			context="HeightCamera"	component="LEFT" />
					<valueof uniform="sceneRt"		type="CAMERA"			context="HeightCamera"	component="RIGHT" />
					<valueof uniform="sceneDw"		type="CAMERA"			context="HeightCamera"	component="BOTTOM" />
					<valueof uniform="texWidth"		type="TEXTURE"			context="texVolume"		component="WIDTH" />
					<valueof uniform="texHeight"	type="TEXTURE"			context="texVolume"		component="HEIGHT" />
					<valueof uniform="time" 		type="RENDERER" 		context="CURRENT" 		component="TIMER" />
					<valueof uniform="radius" 		type="RENDERER" 		context="CURRENT" 		component="radius" />
					<valueof uniform="speed" 		type="RENDERER" 		context="CURRENT" 		component="speed" />
					<valueof uniform="gravity" 		type="RENDERER" 		context="CURRENT" 		component="gravity" />
					<valueof uniform="windDir" 		type="RENDERER" 		context="CURRENT" 		component="windDir" />
					<valueof uniform="particleSize" type="RENDERER" 		context="CURRENT" 		component="particleSize" />
					<valueof uniform="particleColor" type="RENDERER" 		context="CURRENT" 		component="particleColor" />
					<valueof uniform="particlesActive" type="RENDERER" 		context="CURRENT" 		component="particlesActive" />
				</values>
			</shader>
			<textures>
                <texture name="HeightMap_depth" 	UNIT=1 />
            </textures>
			<imageTextures>
				<imageTexture UNIT=0 texture="texVolume" >
					<ACCESS value="WRITE_ONLY" />
					<LEVEL value=0 />
				</imageTexture>
			</imageTextures>
			<buffers>
				<buffer name="Positions" >
					<TYPE value="SHADER_STORAGE" />
					<BINDING_POINT value="1" />
				</buffer>
				<buffer name="Directions" >
					<TYPE value="SHADER_STORAGE" />
					<BINDING_POINT value="2" />
				</buffer>
			</buffers>
		</material>

		<material name="depositionHeight">
			<shader name="deposition">
				<values>
                    <valueof uniform="texVolume" 		type="IMAGE_TEXTURE" 	context="CURRENT" 		component="UNIT" id=0 />
                    <valueof uniform="texVolumeAux" 	type="IMAGE_TEXTURE" 	context="CURRENT" 		component="UNIT" id=2 />
                    <valueof uniform="heightMap" 		type="TEXTURE_BINDING" 	context="CURRENT" 		component="UNIT" id=1 />
					<valueof uniform="sceneHt"			type="CAMERA"			context="HeightCamera"	component="FAR" />
					<valueof uniform="sceneUp"			type="CAMERA"			context="HeightCamera"	component="TOP" />
					<valueof uniform="sceneLf"			type="CAMERA"			context="HeightCamera"	component="LEFT" />
					<valueof uniform="sceneRt"			type="CAMERA"			context="HeightCamera"	component="RIGHT" />
					<valueof uniform="sceneDw"			type="CAMERA"			context="HeightCamera"	component="BOTTOM" />
					<valueof uniform="texWidth"			type="TEXTURE"			context="texVolume"		component="WIDTH" />
					<valueof uniform="texHeight"		type="TEXTURE"			context="texVolume"		component="HEIGHT" />
					<valueof uniform="time" 			type="RENDERER" 		context="CURRENT" 		component="TIMER" />
					<valueof uniform="radius" 			type="RENDERER" 		context="CURRENT" 		component="radius" />
					<valueof uniform="speed" 			type="RENDERER" 		context="CURRENT" 		component="speed" />
					<valueof uniform="gravity" 			type="RENDERER" 		context="CURRENT" 		component="gravity" />
					<valueof uniform="windDir" 			type="RENDERER" 		context="CURRENT" 		component="windDir" />
					<valueof uniform="minHeight" 		type="RENDERER" 		context="CURRENT" 		component="minHeight" />
					<valueof uniform="viscosity" 		type="RENDERER" 		context="CURRENT" 		component="viscosity" />
					<valueof uniform="simulIterations" 	type="RENDERER" 		context="CURRENT" 		component="simulIterations" />
				</values>
			</shader>
			<textures>
                <texture name="HeightMap_depth"  	UNIT=1 />
            </textures>
			<imageTextures>
				<imageTexture UNIT=0 texture="texVolume" >
					<ACCESS value="READ_WRITE" />
					<LEVEL value=0 />
				</imageTexture>
				<imageTexture UNIT=2 texture="texVolumeAux" >
					<ACCESS value="READ_WRITE" />
					<LEVEL value=0 />
				</imageTexture>
			</imageTextures>
		</material>
		

		<material name="Tex">
			<shader name="tex">
				<values>
					<valueof uniform="m_pvm" type="RENDERER" context="CURRENT" component="PROJECTION_VIEW_MODEL" />
					<valueof uniform="texVolume" type="TEXTURE_BINDING" context="CURRENT" component="UNIT" id=0 />
				</values>
			</shader>
            <textures>
                <texture name="texVolume" UNIT = 0 />
            </textures>
		</material>
		
		<material name="ParticlesBB">
			<shader name="billboards">
				<values>
					<valueof uniform="m_model" type="RENDERER" context="CURRENT" component="MODEL" />
					<valueof uniform="m_pv" type="RENDERER" context="CURRENT" component="PROJECTION_VIEW" />
					<valueof uniform="texVolume" type="TEXTURE_BINDING" context="CURRENT" component="UNIT" id=0 />
					<valueof uniform="width" type="RENDERER" context="CURRENT" component="width" />
					<valueof uniform="height" type="RENDERER" context="CURRENT" component="height" />
					<valueof uniform="particleSize" type="RENDERER" context="CURRENT" component="particleSize" />
					<valueof uniform="particleColor" type="RENDERER" context="CURRENT" component="particleColor" />
					<valueof uniform="particlesActive" type="RENDERER" context="CURRENT" component="particlesActive" />
					<valueof uniform="radius" type="RENDERER" context="CURRENT" component="radius" />
				</values>
			</shader>
			<buffers>
				<buffer name="Directions" >
					<TYPE value="SHADER_STORAGE" />
					<BINDING_POINT value="1" />
				</buffer>
			</buffers>
			<textures>
                <texture name="test" UNIT = 0 />
            </textures>
		</material>
	</materials>
</materialLib>